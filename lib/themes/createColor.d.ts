export type TextColors = 'TEXT_BLACK' | 'TEXT_WHITE' | 'TEXT_GREY' | 'TEXT_DISABLED' | 'TEXT_LINK';
export type GreyScaleColors = keyof typeof greyScale | 'BACKGROUND' | 'COLUMN' | 'BASE_GREY' | 'OVER_BACKGROUND' | 'HEAD' | 'BORDER' | 'ACTION_BACKGROUND';
declare const greyScale: {
    GREY_5: string;
    GREY_6: string;
    GREY_7: string;
    GREY_9: string;
    GREY_20: string;
    GREY_30: string;
    GREY_65: string;
    GREY_100: string;
};
export declare const defaultColor: {
    TRANSPARENCY_15: string;
    TRANSPARENCY_30: string;
    TRANSPARENCY_50: string;
    GREY_5: string;
    GREY_6: string;
    GREY_7: string;
    GREY_9: string;
    GREY_20: string;
    GREY_30: string;
    GREY_65: string;
    GREY_100: string;
    TEXT_BLACK: string;
    TEXT_WHITE: string;
    TEXT_GREY: string;
    TEXT_DISABLED: string;
    TEXT_LINK: string;
    WHITE: string;
    BACKGROUND: string;
    COLUMN: string;
    BASE_GREY: string;
    OVER_BACKGROUND: string;
    HEAD: string;
    BORDER: string;
    ACTION_BACKGROUND: string;
    MAIN: string;
    OUTLINE: string;
    DANGER: string;
    WARNING: string;
    WARNING_YELLOW: string;
    OVERLAY: string;
    SCRIM: string;
    BRAND: string;
};
type Palette = typeof defaultColor;
export type ColorProperty = Partial<Palette>;
export type CreatedColorTheme = Palette & {
    hoverColor: (value: string, darkenAmount?: 0.05 | 0.15) => string;
    disableColor: (value: string) => string;
};
export declare const createColor: (userColor?: ColorProperty) => CreatedColorTheme;
export {};
