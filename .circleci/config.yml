version: 2.1

executors:
  node-maintenance:
    docker:
      - image: cimg/node:21.4.0
        auth:
          username: smarthrinc
          password: $DOCKER_HUB_ACCESS_TOKEN
  node-active-lts:
    docker:
      - image: cimg/node:21.4.0
        auth:
          username: smarthrinc
          password: $DOCKER_HUB_ACCESS_TOKEN
  node-active-lts-browsers:
    docker:
      - image: cimg/node:21.4.0-browsers
        auth:
          username: smarthrinc
          password: $DOCKER_HUB_ACCESS_TOKEN
commands:
  setup-for-test:
    steps:
      - checkout
      # Download and cache dependencies
      - restore_cache:
          keys:
            - dependencies-test-{{ checksum "package.json" }}-{{ checksum "yarn.lock" }}
            # fallback to using the latest cache if no exact match is found
            - modules-cache-
      - run: yarn install --frozen-lockfile
      - save_cache:
          paths:
            - node_modules
          key: dependencies-test-{{ checksum "package.json" }}-{{ checksum "yarn.lock" }}
  check-source:
    steps:
      - run: yarn audit --groups dependencies
      - run: yarn lint
  run-npm-test:
    steps:
      - run: yarn test -w 1
      - run: yarn test:build-assets
  run-a11y-test:
    steps:
      - checkout
      - restore_cache:
          keys:
            - yarn-packages-reg-{{ checksum "yarn.lock" }}
      - run: yarn install --frozen-lockfile
      - save_cache:
          paths:
            - ~/.cache/yarn
          key: yarn-packages-reg-{{ checksum "yarn.lock" }}
      - run:
          command: yarn build-storybook
      - run:
          command: npx http-server storybook-static --port 6006 --silent
          background: true
      - run:
          command: yarn test-storybook:ci
      - store_test_results:
          path: junit.xml
  run-chromatic:
    steps:
      - checkout
      - run: yarn run chromatic --project-token=${CHROMATIC_PROJECT_TOKEN} --exit-zero-on-changes --only-changed
  run-chromatic-master:
    steps:
      - checkout
      - run: yarn run chromatic --project-token=${CHROMATIC_PROJECT_TOKEN} --auto-accept-changes --only-changed
  install-noto-sans-cjk-jp:
    steps:
      - run:
          name: Install NotoSansCJK JP
          command: |
            mkdir /tmp/fonts
            cd /tmp/fonts
            wget https://noto-website-2.storage.googleapis.com/pkgs/NotoSansCJKjp-hinted.zip
            unzip NotoSansCJKjp-hinted.zip
            mkdir -p ~/.fonts
            cp *otf ~/.fonts
            fc-cache -f -v
            fc-match --all
            rm -rf /tmp/fonts
jobs:
  node-maintenance:
    executor: node-maintenance
    steps:
      - setup-for-test
      - check-source
      - run-npm-test
  node-active-lts:
    executor: node-active-lts
    steps:
      - setup-for-test
      - check-source
      - run-npm-test
  a11y-test:
    executor: node-active-lts-browsers
    working_directory: ~/repo
    steps:
      - install-noto-sans-cjk-jp
      - run-a11y-test
  chromatic-deployment:
    executor: node-active-lts
    steps:
      - setup-for-test
      - run-chromatic
  chromatic-deployment-master:
    executor: node-active-lts
    steps:
      - setup-for-test
      - run-chromatic-master
workflows:
  multiple_builds:
    jobs:
      - node-maintenance:
          context: smarthr-dockerhub
      - node-active-lts:
          context: smarthr-dockerhub
      - a11y-test:
          context: smarthr-dockerhub
      - chromatic-deployment:
          filters:
            branches:
              ignore:
                - master
          context: smarthr-dockerhub
      - chromatic-deployment-master:
          filters:
            branches:
              only:
                - master
          context: smarthr-dockerhub
