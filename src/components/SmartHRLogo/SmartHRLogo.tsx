import React, { HTMLAttributes, VFC, useLayoutEffect, useMemo, useRef, useState } from 'react'
import styled, { css } from 'styled-components'

import { useTheme } from '../../hooks/useTheme'
import { useClassNames } from './useClassNames'

type Props = {
  /** コンポーネントのタイトル */
  title?: string
  /** コンポーネントの幅 */
  width?: number | string
  /** コンポーネントの高さ */
  height?: number | string
  /** ロゴの色 */
  fill?: 'white' | 'brand' | 'black'
  /** コンポーネントに適用するクラス名 */
  className?: string
}
type ElementProps = Omit<HTMLAttributes<HTMLElement>, keyof Props>

export const SmartHRLogo: VFC<Props & ElementProps> = ({
  title = 'SmartHR',
  width,
  height,
  fill = 'white',
  className = '',
  ...props
}) => {
  const classNames = useClassNames()
  const theme = useTheme()
  const svgRef = useRef<SVGSVGElement>(null)
  const [logoHeight, setLogoHeight] = useState<number>()

  const fillColor = useMemo(() => {
    switch (fill) {
      case 'black':
        return theme.color.TEXT_BLACK
      case 'brand':
        return theme.color.BRAND
      case 'white':
        return theme.color.WHITE
    }
  }, [fill, theme.color])

  useLayoutEffect(() => {
    if (svgRef.current) {
      setLogoHeight(svgRef.current.clientHeight)
    }
  }, [])

  return (
    <Wrapper
      {...props}
      $width={width}
      $height={height}
      $logoHeight={logoHeight}
      className={`${className} ${classNames.wrapper}`}
    >
      <svg role="img" viewBox="0 0 150 27" fill={fillColor} ref={svgRef} aria-label={title}>
        <path
          fillRule="evenodd"
          d="M8.54 0h9.599c1.152 0 2.27.229 3.325.68a8.616 8.616 0 0 1 4.543 4.598 8.679 8.679 0 0 1 .672 3.365v9.714a8.679 8.679 0 0 1-2.502 6.112 8.503 8.503 0 0 1-2.713 1.85 8.401 8.401 0 0 1-3.325.681h-9.6a8.401 8.401 0 0 1-3.324-.68 8.616 8.616 0 0 1-4.543-4.598A8.68 8.68 0 0 1 0 18.357V8.643A8.68 8.68 0 0 1 2.501 2.53 8.502 8.502 0 0 1 5.215.681 8.4 8.4 0 0 1 8.54 0Zm15.912 8.643c0-3.529-2.827-6.39-6.313-6.39h-9.6c-3.486 0-6.312 2.861-6.312 6.39v9.714c0 3.529 2.826 6.39 6.313 6.39h9.599c3.486 0 6.313-2.861 6.313-6.39V8.643Zm19.125 3.508-3.024-1.216h-.001c-1.789-.71-3.081-1.223-3.081-2.478 0-1.25 1.03-1.996 2.758-1.996 1.456 0 2.703.413 4.08 1.367a.46.46 0 0 0 .624-.099l1.856-2.364a.48.48 0 0 0-.064-.657c-1.736-1.528-4.119-2.426-6.496-2.426-4.392 0-7.703 2.781-7.703 6.47 0 3.73 3.004 5.342 4.296 5.861l3.143 1.34h.001c1.68.71 2.788 1.18 2.788 2.472 0 .779-.388 2.084-2.991 2.084-1.521 0-3.353-.715-4.901-1.892a.457.457 0 0 0-.636.07l-2.164 2.667a.473.473 0 0 0 .056.66c2.07 1.724 4.78 2.704 7.528 2.704 5.574 0 8.112-3.476 8.112-6.705 0-2.839-1.329-4.701-4.18-5.862Zm86.951 11.686V3.79a.47.47 0 0 0-.468-.473h-3.68a.47.47 0 0 0-.468.473v8.702h-7.864V3.79a.47.47 0 0 0-.467-.473h-3.695a.47.47 0 0 0-.468.473v20.047c0 .261.21.473.468.473h3.695a.47.47 0 0 0 .467-.473v-7.582h7.864v7.582c0 .261.21.473.468.473h3.68a.47.47 0 0 0 .468-.473Zm11.297-11.345c1.015 0 1.788-.238 2.319-.715.531-.475.797-1.133.797-1.971 0-.856-.263-1.522-.79-1.999-.527-.476-1.302-.714-2.326-.714h-3.302v5.399h3.302Zm4.073 3.105 4.05 8.025a.472.472 0 0 1-.416.688h-3.902a.468.468 0 0 1-.417-.26l-3.846-7.735h-2.855v7.522a.47.47 0 0 1-.467.473h-3.691a.47.47 0 0 1-.467-.473V3.813a.47.47 0 0 1 .467-.473h7.46c1.594 0 2.972.243 4.134.728 1.162.484 2.054 1.2 2.675 2.145.622.946.932 2.101.932 3.464 0 1.518-.313 2.746-.939 3.687-.626.941-1.532 1.685-2.718 2.233Zm-46.62-6.612-.046 2.804a.47.47 0 0 1-.51.464c-.468-.043-.813-.058-1.033-.039a3.588 3.588 0 0 0-1.9.724c-.573.424-1.074 1.345-1.074 2.081v8.818a.47.47 0 0 1-.467.473h-3.505a.47.47 0 0 1-.468-.473V9.201a.47.47 0 0 1 .468-.473h3.268a.47.47 0 0 1 .466.437l.101 1.164c.39-.71.858-1.094 1.453-1.438.656-.38 1.226-.45 1.957-.45.34 0 .64.023.898.07a.475.475 0 0 1 .392.474Zm10.721 14.86v-2.494a.47.47 0 0 0-.516-.469c-.212.02-.439.03-.679.03-.569 0-.972-.11-1.21-.332-.237-.22-.355-.638-.355-1.253v-7.07h2.108a.47.47 0 0 0 .467-.473V8.913a.47.47 0 0 0-.467-.473h-2.108V5.342a.47.47 0 0 0-.467-.473h-3.506a.47.47 0 0 0-.467.473V8.44h-1.639a.47.47 0 0 0-.467.473v2.87a.47.47 0 0 0 .467.474h1.639v7.618c0 1.632.396 2.827 1.188 3.585.792.759 1.933 1.138 3.422 1.138.817 0 1.571-.1 2.261-.3a.467.467 0 0 0 .329-.452Zm-27.706-3.013c.46-.264.79-.583.989-.958v-2.548h-1.594c-.948 0-1.65.218-2.106.655-.455.437-.683.991-.683 1.663 0 .47.164.853.491 1.145.328.293.761.44 1.302.44.607 0 1.14-.133 1.6-.397Zm4.975 3.478h-3.305a.47.47 0 0 1-.468-.473v-.91c-.93 1.114-2.2 1.67-3.813 1.67-.958 0-1.836-.198-2.632-.596a4.733 4.733 0 0 1-1.893-1.671 4.331 4.331 0 0 1-.697-2.412c0-1.642.6-2.907 1.8-3.795 1.2-.888 2.986-1.332 5.357-1.332h1.665v-.85c0-.7-.169-1.245-.505-1.634-.337-.389-.856-.583-1.558-.583-.626 0-1.113.15-1.459.453-.26.227-.422.528-.487.904a.464.464 0 0 1-.448.4H75.31a.47.47 0 0 1-.467-.521 4.31 4.31 0 0 1 .79-2.043c.545-.768 1.323-1.373 2.333-1.814 1.01-.442 2.175-.663 3.494-.663 1.223 0 2.307.21 3.251.627.944.417 1.684 1.04 2.22 1.865.536.825.804 1.838.804 3.038v8.852l-.001 1.016a.47.47 0 0 1-.467.472Zm-15.051-9.85c0-2.131-.425-3.667-1.274-4.608-.849-.941-2.051-1.412-3.607-1.412-1.005 0-1.892.204-2.66.613a5.182 5.182 0 0 0-1.908 1.749c-.37-.797-.896-1.39-1.579-1.778-.683-.389-1.499-.584-2.448-.584-.938 0-1.778.178-2.518.533a5.19 5.19 0 0 0-1.879 1.527l-.107-1.337a.47.47 0 0 0-.465-.435H50.5a.47.47 0 0 0-.467.473v14.636a.47.47 0 0 0 .467.473h3.505a.47.47 0 0 0 .468-.473V14.09c.246-.432.564-.765.953-1 .39-.236.844-.354 1.366-.354.474 0 .863.065 1.167.195.303.13.536.372.697.727.161.355.242.855.242 1.498v8.681c0 .261.21.473.467.473h3.505a.47.47 0 0 0 .468-.473v-9.574c.227-.48.535-.854.924-1.123.39-.269.859-.404 1.41-.404.474 0 .86.065 1.159.195.299.13.529.37.69.72.161.35.242.842.242 1.476v8.71c0 .261.209.473.467.473h3.52a.47.47 0 0 0 .467-.473V14.46Zm-58.963 5.918a5.647 5.647 0 0 1-3.107-.916c-.978-.643-1.694-1.58-2.018-2.637-.166-.542.18-1.103.772-1.254.593-.152 1.207.164 1.373.705a2.819 2.819 0 0 0 1.174 1.534c1.388.914 3.33.625 4.33-.643 1-1.269.684-3.044-.704-3.957a3.21 3.21 0 0 0-.545-.288c-.561-.23-.812-.832-.56-1.344.252-.513.911-.742 1.472-.511.327.134.641.3.934.492 2.385 1.569 2.928 4.618 1.21 6.797-1.04 1.32-2.674 2.022-4.331 2.022Zm-1.2-4.186a1.116 1.116 0 0 0 1.375-.777 1.129 1.129 0 0 0-.768-1.392 3.077 3.077 0 0 1-.967-.474c-1.388-1.011-1.704-2.977-.704-4.382a3.077 3.077 0 0 1 2.02-1.265 3.053 3.053 0 0 1 2.31.552c.461.336.822.791 1.042 1.317.24.573.894.84 1.46.598.566-.243.83-.905.59-1.478a5.374 5.374 0 0 0-1.79-2.266 5.246 5.246 0 0 0-3.97-.947 5.286 5.286 0 0 0-3.47 2.172c-1.717 2.413-1.174 5.79 1.211 7.528a5.285 5.285 0 0 0 1.66.814Z"
        />
      </svg>
    </Wrapper>
  )
}

const Wrapper = styled.figure<{
  $width?: number | string
  $height?: number | string
  $logoHeight?: number
}>`
  ${({ $width, $height, $logoHeight, theme: { leading } }) =>
    css`
      display: inline-block;
      margin: unset;
      ${$logoHeight && `padding: ${$logoHeight / 2}px;`}
      aspect-ratio: 50 / 9;
      line-height: ${leading.NONE};
      ${$width && `width: ${convertValue($width)};`}
      ${$height && `height: ${convertValue($height)};`}

      > svg {
        display: inline-block;
        vertical-align: bottom;
        width: 100%;
      }
    `}
`
const convertValue = (value: number | string) => (typeof value === 'string' ? value : `${value}px`)
